[[{"l":"Welcome to Runfile","p":["Runfile is a command line utility and a Ruby library that helps you create feature-rich command line utilities for your projects.","You create a runfile, and execute commands with run command arguments -and --flags.","Runfile Demo","If you are familiar with Ruby's Rake, or with Makefile, then the concept of Runfile should be familiar to you.","Under the hood, Runfile makes use of the Docopt library, so that you can define your command's argument in an intuitive way, and create expressive command line utilities with ease.","For example, the below usage methods uses a docopt string, to define a command named greet with one required argument ( NAME) and one optional flag ([--color])."]},{"l":"What is Runfile","p":["Runfile is:","A command line utility named run","A Domain Specific Language (DSL) in the form of Ruby methods, to help you define your program's behavior.","A simple runfile looks like this:","And this Runfile can be executed by running:"]},{"l":"Examples","p":["The GitHub repository of Runfile contains many examples, showing different aspects of its functionality.","For convenience, you can also get these examples directly in your terminal by running any of these commands in a directory without any runfile:"]},{"l":"Installation","p":["Runfile comes as a Ruby gem and is primarily designed for Ruby developers.","To install Runfile, run:"]},{"l":"Quick Start"}],[{"l":"action","p":["Defines the action name, shortcut and the block that will be executed.","The action block will receive a single args hash containing all the parsed arguments and flags.","Providing a second argument to the action directive, denotes a shortcut. Note that you also need to define this shortcut in the usage directive(unless the action does not require any arguments, in which case usage is optional).","A runfile may contain on action without a name. This will be the default action that is executed when running run without arguments (instead of showing usage).","The action name and shortcut may either be strings or symbols. Whichever you choose is a matter of personal preference."]}],[{"l":"env_var","p":["Defines an environment variable. This is purely decorative for the --help text."]}],[{"l":"example","p":["Defines an example command. This is purely decorative for the --help text and can be called multiple times.","If you require more flexibility in the example output, you can use a multi-line string. Indentation and word wrapping will be taken care of automatically."]}],[{"l":"help","p":["Defines the help message for the following action."]}],[{"l":"helpers","p":["In case you need to define ruby methods in your runfile (for example, methods that provide services to multiple actions), use the helpers block directive."]}],[{"l":"import","p":["Import and blend actions from external runfiles. The provided argument is a relative path to the file, without the runfile extension, or a glob pattern to import multiple files.","To import multiple files, use a wildcard.","The import directive accepts additional key: value pairs, which will be forwarded to the imported runfile as the context hash.","The imported runfile can optionally use the require_context directive to either set default values to context variables, or require that they will be provided by the importer."]}],[{"l":"import_gem","p":["Import and blend actions from external runfiles that reside in an external gem. The provided argument is the in the format of gemname/filename.","The below example imports the docker.runfile from the root directory of the runfile-tasks gem.","The additional arguments are passed on to the imported file, as context."]}],[{"l":"option","p":["Defines a flag argument."]}],[{"l":"param","p":["Defines a positional parameter. This is only displayed in the --help text and has no other technical meaning."]}],[{"l":"require_context","p":["This directive can be used in any imported runfile to require that the importing runfile needs to provide these context variables. When used with the additional default: 'value' argument, this value will be used in case the importing runfile did not provide a value."]}],[{"l":"shortcut","p":["Defines a shortcut string that will be expanded before running anything. Note that this operates on the ARGV level. This is useful for creating short strings that expand to longer command lines.","Since these shortcuts are expanded as if the user has typed the longer command line, this feature can also be used to access commands in imported files."]}],[{"l":"summary","p":["Defines a short summary to show when running with --help.","When using multiple runfiles with the import directive, the summary of the imported runfile is also used in the Commands section of the main runfile."]}],[{"l":"title","p":["Defines the title of the command line utility.","When using multiple runfiles with the import directive, the title of the imported runfile is also used in the Commands section of the main runfile(unless summary is defined, in this case it will be used instead)."]}],[{"l":"usage","p":["Defines a usage string for the foloowing action. When the action does not require any arguments, this is optional.","The syntax of the provided string should follow docopt usage patterns."]}],[{"l":"version","p":["Defines the version string to show when running with --version."]}],[{"l":"Colorful Output","p":["If you have skimmed through the reference, you may have noticed that the command say is sometimes used instead of Ruby's puts. This is provided by the Colsole gem, which is bundled with Runfile, and available inside your actions.","In addition, Runfile itself, prints most of its output using say, which means you can use Colsole's color markers in some other places","Colsole's primary function is to provide a way to easily print colorful strings."]}],[{"l":"Including Modules","p":["Since your runfile code runs inside an instance_eval block, you cannot use Ruby's include directive. Use extend instead:"]}],[{"l":"Syntax Highlighting","p":["Since your runfile files are just ruby, you can set your text editor to show files with a runfile extension, as Ruby. This normally also works for main files that are named runfile."]},{"l":"Vim","p":["To treat runfile as ruby in vim, add this to your ~/.exrc or ~/.vimrc file(create it if it does not exist):"]},{"l":"GitHub","p":["To instruct GitHub code view screens to apply Ruby syntax highlighting to your runfiles, add a file named .gitattributes to your repository, with this content:"]}]]